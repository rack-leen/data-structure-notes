/********************************************************************
 *	@program name : NumberSystemConversion.h
 *	@author  name : rack
 *	@my      mail : 1740234864@qq.com
 *	@last    date : 2017.11.4
 *	@function     : 栈实现的数制转换，十进制转换为其他进制
 *	@type         : header file
*********************************************************************/

/********************************************************************
*基本操作
*InitStack  初始化栈
*Push       插入元素 进栈
*Pop        删除元素 退栈
*Conversion 数制转换
*数制转换方法：
*设n为需要转换的进制,x为转换的进制
*********************************************************************/

/********************************************************************
 *定义域
*********************************************************************/
#ifndef _NUMBERSYSTEMCONVERSION_H
#define _NUMBERSYSTEMCONVERSION_H

/********************************************************************
 *头文件
*********************************************************************/
#include <stdio.h>
#include <stdlib.h>

/********************************************************************
 *定义区
*********************************************************************/
#define TRUE            1
#define FALSE           0
#define OK              1
#define ERROR           0
#define INFEASIBLE      -1
#define OVERFLOW        -2
#define STACK_INCREMENT 10					    //存储空间的分配增量
#define STACK_INIT_SIZE 100                                         //存储空间的初始分配量

/********************************************************************
 *自定义类型
*********************************************************************/
typedef int Status   ;
typedef int Elemtype ;

/********************************************************************
 *结构体
*********************************************************************/
typedef struct {                                                    //构建数制转换栈的结构体
	int *base    ;                                              //栈基指针
	int *top     ;                                              //栈顶指针
	int stacksize;                                              //栈长度
}SqStack;                                                           //栈类型

/********************************************************************
 *函数的表示
*********************************************************************/

Status EmptyStack(SqStack *S)                          ;
Status ClearStack(SqStack *S)                          ;
Status InitStack(SqStack *S)                           ;            //初始化栈
Status Push(SqStack *S , Elemtype e)                   ;            //插入元素，进栈
Status Pop(SqStack *S , Elemtype *e)                   ;            //删除元素，退栈
Status DestroyStack(SqStack *S)                        ;
void Conversion(SqStack *S , Elemtype n , Elemtype x)  ;            //数制转换
#endif
